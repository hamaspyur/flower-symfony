<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $email
 * @property string $facebook_id
 * @property string $facebook_token
 * @property Doctrine_Collection $Users
 * 
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getEmail()          Returns the current record's "email" value
 * @method string              getFacebookId()     Returns the current record's "facebook_id" value
 * @method string              getFacebookToken()  Returns the current record's "facebook_token" value
 * @method Doctrine_Collection getUsers()          Returns the current record's "Users" collection
 * @method User                setName()           Sets the current record's "name" value
 * @method User                setEmail()          Sets the current record's "email" value
 * @method User                setFacebookId()     Sets the current record's "facebook_id" value
 * @method User                setFacebookToken()  Sets the current record's "facebook_token" value
 * @method User                setUsers()          Sets the current record's "Users" collection
 * 
 * @package    hamaspyur
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('facebook_id', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('facebook_token', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Flower as Users', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}